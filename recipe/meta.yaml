{% set version = "2.9.1" %}
{% set sha256 = "c6160321dc98e6e1184cc791fbeadd2907bb4a0ce0e447f2ea4ff8ab56550913" %}

# this is set to PYBIND11_INTERNALS_VERSION
{% set abi_version = "4" %}

# this one reflects how we set the various flags in conda-forge that controls
# how tightly the pybind11 ABI is fixed
{% set conda_forge_abi_epoch = "1" %}

package:
  name: pybind11-split
  version: {{ version }}

source:
  fn: pybind11-{{ version }}.tar.gz
  url: https://github.com/pybind/pybind11/archive/v{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: 1

outputs:
  - name: pybind11-abi
    script: build-pybind11-abi.sh
    version: {{ conda_forge_abi_epoch }}!{{ abi_version }}
    build:
      noarch: generic
      skip: true  # [not linux64]
      run_exports:
        - pybind11-abi =={{ conda_forge_abi_epoch }}!{{ abi_version }}
    test:
      source_files:
        - include/pybind11/detail/internals.h
      commands:
        # make sure the internals version matches the package version
        - if [ $(grep "#define PYBIND11_INTERNALS_VERSION" include/pybind11/detail/internals.h | cut -d' ' -f3) != "{{ abi_version }}" ]; then exit 1; fi
        - test -f ${PREFIX}/etc/conda/activate.d/pybind11-abi_activate.sh
        - test -f ${PREFIX}/etc/conda/deactivate.d/pybind11-abi_deactivate.sh
        - echo ${CXXFLAGS} | grep -e "-DPYBIND11_COMPILER_TYPE= -DPYBIND11_BUILD_ABI="

  - name: pybind11-global
    script: build-pybind11-global.sh  # [unix]
    script: build-pybind11-global.bat  # [win]
    requirements:
      build:
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
        - cmake
        - make  # [unix]
        - {{ compiler('cxx') }}
      host:
        - python
        - pip
        - setuptools
      run:
        - python
      run_constrained:
        - pybind11-abi =={{ abi_version }}
    test:
      commands:
        - echo "works!"

  - name: pybind11
    script: build-pybind11.sh  # [unix]
    script: build-pybind11.bat  # [win]
    requirements:
      build:
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
        - cmake
        - make  # [unix]
        - {{ compiler('cxx') }}
      host:
        - python
        - pip
        - setuptools
      run:
        - python
        - {{ pin_subpackage("pybind11-global", exact=True) }}
      run_constrained:
        - pybind11-abi =={{ abi_version }}
    test:
      imports:
        - pybind11
      commands:
        - test -f ${PREFIX}/share/cmake/pybind11/pybind11Config.cmake                                     # [unix]
        - if exist %LIBRARY_PREFIX%\share\cmake\pybind11\pybind11Config.cmake (exit 0) else (exit 1)      # [win]
        - test -f ${PREFIX}/include/pybind11/pybind11.h      # [unix]
        - if exist %LIBRARY_INC%\pybind11\pybind11.h (exit 0) else (exit 1)      # [win]
        - test -f $(python -c "import pybind11 as py; print(py.get_include())")/pybind11/pybind11.h      # [unix]
        - if exist $(python -c "import pybind11 as py; print(py.get_include())")\pybind11\pybind11.h (exit 0) else (exit 1)      # [win]

about:
  home: https://github.com/pybind/pybind11/
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE
  summary: Seamless operability between C++11 and Python
  doc_url: https://pybind11.readthedocs.io/

extra:
  recipe-maintainers:
    - ax3l
    - SylvainCorlay
    - wjakob
    - henryiii
